### YamlMime:TSType
name: Validate
uid: '@microsoft/sp-core-library!Validate:class'
package: '@microsoft/sp-core-library!'
fullName: Validate
summary: Performs common validation tests for properties and function parameters.
remarks: >-
  This class implements provides a standard way to validate properties and function parameters. Unlike debug assertions,
  Validate checks are always performed and will always throw an error, even in a production release. As such, be careful
  not to overuse these checks in a way that might impact performance.
isPreview: false
isDeprecated: false
type: class
methods:
  - name: 'isNonemptyString(value, variableName)'
    uid: '@microsoft/sp-core-library!Validate.isNonemptyString:member(1)'
    package: '@microsoft/sp-core-library!'
    fullName: 'isNonemptyString(value, variableName)'
    summary: 'Throws an exception if the specified string is null, undefined, or an empty string.'
    remarks: ''
    isPreview: false
    isDeprecated: false
    syntax:
      content: 'static isNonemptyString(value: string | undefined | null, variableName: string): void;'
      parameters:
        - id: value
          description: the value to check
          type: string | undefined | null
        - id: variableName
          description: 'the program variable name, which will be mentioned in the error message'
          type: string
      return:
        type: void
        description: ''
  - name: 'isNotDisposed(value, className)'
    uid: '@microsoft/sp-core-library!Validate.isNotDisposed:member(1)'
    package: '@microsoft/sp-core-library!'
    fullName: 'isNotDisposed(value, className)'
    summary: Throws an exception if the specified object has been disposed.
    remarks: ''
    isPreview: false
    isDeprecated: false
    syntax:
      content: 'static isNotDisposed(value: IDisposable, className: string): void;'
      parameters:
        - id: value
          description: the value to check
          type: '<xref uid="@microsoft/sp-core-library!IDisposable:interface" />'
        - id: className
          description: 'the class name, which will be mentioned in the error message'
          type: string
      return:
        type: void
        description: ''
  - name: 'isNotNullOrUndefined(value, variableName)'
    uid: '@microsoft/sp-core-library!Validate.isNotNullOrUndefined:member(1)'
    package: '@microsoft/sp-core-library!'
    fullName: 'isNotNullOrUndefined(value, variableName)'
    summary: Throws an exception if the specified value is null or undefined.
    remarks: ''
    isPreview: false
    isDeprecated: false
    syntax:
      content: 'static isNotNullOrUndefined(value: unknown, variableName: string): void;'
      parameters:
        - id: value
          description: the value to check
          type: unknown
        - id: variableName
          description: 'the program variable name, which will be mentioned in the error message'
          type: string
      return:
        type: void
        description: ''
  - name: 'isTrue(value, variableName)'
    uid: '@microsoft/sp-core-library!Validate.isTrue:member(1)'
    package: '@microsoft/sp-core-library!'
    fullName: 'isTrue(value, variableName)'
    summary: Throws an exception if the specified value is not true.
    remarks: ''
    isPreview: false
    isDeprecated: false
    syntax:
      content: 'static isTrue(value: boolean | undefined | null, variableName: string): void;'
      parameters:
        - id: value
          description: the value to check
          type: boolean | undefined | null
        - id: variableName
          description: 'the program variable name, which will be mentioned in the error message'
          type: string
      return:
        type: void
        description: ''
