### YamlMime:TSType
name: ThemeProvider
uid: '@microsoft/sp-component-base!ThemeProvider:class'
package: '@microsoft/sp-component-base!'
fullName: ThemeProvider
summary: >-
  The ThemeProvider class provides the capability to get different themes from the Framework. Themes can be provided in
  different contexts, e.g. Canvas sections may provide a variant of the global theme in some contexts.
remarks: ''
isPreview: false
isDeprecated: false
type: class
constructors:
  - name: '(constructor)(serviceScope, theme, themeV2)'
    uid: '@microsoft/sp-component-base!ThemeProvider:constructor(1)'
    package: '@microsoft/sp-component-base!'
    fullName: '(constructor)(serviceScope, theme, themeV2)'
    summary: Construct a new instance of the ThemeProvider class.
    remarks: ''
    isPreview: false
    isDeprecated: false
    syntax:
      content: 'constructor(serviceScope: ServiceScope, theme?: ITheme, themeV2?: Theme);'
      parameters:
        - id: serviceScope
          description: The current service scope.
          type: '<xref uid="@microsoft/sp-core-library!ServiceScope:class" />'
        - id: theme
          description: Theme to provide.
          type: '<xref uid="@microsoft/sp-component-base!ITheme:interface" />'
        - id: themeV2
          description: ''
          type: '<xref uid="@fluentui/tokens!Theme:type" />'
properties:
  - name: serviceKey
    uid: '@microsoft/sp-component-base!ThemeProvider.serviceKey:member'
    package: '@microsoft/sp-component-base!'
    fullName: serviceKey
    summary: The service key for ThemeProvider.
    remarks: ''
    isPreview: false
    isDeprecated: false
    syntax:
      content: 'static readonly serviceKey: ServiceKey<ThemeProvider>;'
      return:
        type: >-
          <xref uid="@microsoft/sp-core-library!ServiceKey:class" />&lt;<xref
          uid="@microsoft/sp-component-base!ThemeProvider:class" />&gt;
methods:
  - name: tryGetTheme()
    uid: '@microsoft/sp-component-base!ThemeProvider#tryGetTheme:member(1)'
    package: '@microsoft/sp-component-base!'
    fullName: tryGetTheme()
    summary: 'If set, get the current scoped theme.'
    remarks: ''
    isPreview: false
    isDeprecated: false
    syntax:
      content: 'tryGetTheme(): IReadonlyTheme | undefined;'
      return:
        type: '<xref uid="@microsoft/sp-component-base!IReadonlyTheme:interface" /> | undefined'
        description: ''
  - name: tryGetThemeV2()
    uid: '@microsoft/sp-component-base!ThemeProvider#tryGetThemeV2:member(1)'
    package: '@microsoft/sp-component-base!'
    fullName: tryGetThemeV2()
    summary: ''
    remarks: ''
    isPreview: false
    isDeprecated: false
    syntax:
      content: 'tryGetThemeV2(): Theme | undefined;'
      return:
        type: '<xref uid="@fluentui/tokens!Theme:type" /> | undefined'
        description: ''
events:
  - name: themeChangedEvent
    uid: '@microsoft/sp-component-base!ThemeProvider#themeChangedEvent:member'
    package: '@microsoft/sp-component-base!'
    fullName: themeChangedEvent
    summary: Raised when the theme changes with the new theme as an argument.
    remarks: ''
    isPreview: false
    isDeprecated: false
    syntax:
      content: 'readonly themeChangedEvent: SPEvent<ThemeChangedEventArgs>;'
      return:
        type: >-
          <xref uid="@microsoft/sp-core-library!SPEvent:class" />&lt;<xref
          uid="@microsoft/sp-component-base!ThemeChangedEventArgs:class" />&gt;
