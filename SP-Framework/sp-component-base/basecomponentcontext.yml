### YamlMime:TSType
name: BaseComponentContext
uid: '@microsoft/sp-component-base!BaseComponentContext:class'
package: '@microsoft/sp-component-base!'
fullName: BaseComponentContext
summary: The base class for context objects for client-side components.
remarks: >-
  A "context" object is a collection of well-known services and other objects that are likely to be needed by business
  logic that interacts with a associated component. Each component type has its own specialized subclass of
  BaseComponentContext, e.g. WebPartContext for web parts, ExtensionContext for client-side extensions, and so on.


  The constructor for this class is marked as internal. Third-party code should not call the constructor directly or
  create subclasses that extend the `BaseComponentContext` class.
isPreview: false
isDeprecated: false
type: class
properties:
  - name: aadHttpClientFactory
    uid: '@microsoft/sp-component-base!BaseComponentContext#aadHttpClientFactory:member'
    package: '@microsoft/sp-component-base!'
    fullName: aadHttpClientFactory
    summary: The instance of AadHttpClientFactory created for this instance of component
    remarks: ''
    isPreview: false
    isDeprecated: false
    syntax:
      content: 'get aadHttpClientFactory(): AadHttpClientFactory;'
      return:
        type: '<xref uid="@microsoft/sp-http-base!AadHttpClientFactory:class" />'
  - name: aadTokenProviderFactory
    uid: '@microsoft/sp-component-base!BaseComponentContext#aadTokenProviderFactory:member'
    package: '@microsoft/sp-component-base!'
    fullName: aadTokenProviderFactory
    summary: The instance of AadTokenProviderFactory created for this instance of component
    remarks: ''
    isPreview: false
    isDeprecated: false
    syntax:
      content: 'get aadTokenProviderFactory(): AadTokenProviderFactory;'
      return:
        type: '<xref uid="@microsoft/sp-http-base!AadTokenProviderFactory:class" />'
  - name: dynamicDataProvider
    uid: '@microsoft/sp-component-base!BaseComponentContext#dynamicDataProvider:member'
    package: '@microsoft/sp-component-base!'
    fullName: dynamicDataProvider
    summary: Returns the Dynamic Data Provider associated with the component.
    remarks: ''
    isPreview: false
    isDeprecated: false
    syntax:
      content: 'get dynamicDataProvider(): DynamicDataProvider;'
      return:
        type: '<xref uid="@microsoft/sp-component-base!DynamicDataProvider:class" />'
  - name: dynamicDataSourceManager
    uid: '@microsoft/sp-component-base!BaseComponentContext#dynamicDataSourceManager:member'
    package: '@microsoft/sp-component-base!'
    fullName: dynamicDataSourceManager
    summary: Returns the Dynamic Data Source Manager associated with the component.
    remarks: ''
    isPreview: false
    isDeprecated: false
    syntax:
      content: 'get dynamicDataSourceManager(): DynamicDataSourceManager;'
      return:
        type: '<xref uid="@microsoft/sp-component-base!DynamicDataSourceManager:class" />'
  - name: httpClient
    uid: '@microsoft/sp-component-base!BaseComponentContext#httpClient:member'
    package: '@microsoft/sp-component-base!'
    fullName: httpClient
    summary: The instance of HttpClient created for this instance of component
    remarks: ''
    isPreview: false
    isDeprecated: false
    syntax:
      content: 'get httpClient(): HttpClient;'
      return:
        type: '<xref uid="@microsoft/sp-http-base!HttpClient:class" />'
  - name: instanceId
    uid: '@microsoft/sp-component-base!BaseComponentContext#instanceId:member'
    package: '@microsoft/sp-component-base!'
    fullName: instanceId
    summary: A unique identifier for the instance of the component.
    remarks: >-
      A component implementation can be loaded multiple times on the page. For example, if the component is a charting
      web part, multiple instances of this web part could be added to the SharePoint canvas. The instanceId uniquely
      identifies each of these instances.
    isPreview: false
    isDeprecated: false
    syntax:
      content: 'get instanceId(): string;'
      return:
        type: string
  - name: isDisposed
    uid: '@microsoft/sp-component-base!BaseComponentContext#isDisposed:member'
    package: '@microsoft/sp-component-base!'
    fullName: isDisposed
    summary: Returns true if the context is disposed.
    remarks: ''
    isPreview: false
    isDeprecated: false
    syntax:
      content: 'get isDisposed(): boolean;'
      return:
        type: boolean
  - name: isServedFromLocalhost
    uid: '@microsoft/sp-component-base!BaseComponentContext#isServedFromLocalhost:member'
    package: '@microsoft/sp-component-base!'
    fullName: isServedFromLocalhost
    summary: Returns true if the solution is being served from localhost
    remarks: ''
    isPreview: false
    isDeprecated: false
    syntax:
      content: 'get isServedFromLocalhost(): boolean;'
      return:
        type: boolean
  - name: manifest
    uid: '@microsoft/sp-component-base!BaseComponentContext#manifest:member'
    package: '@microsoft/sp-component-base!'
    fullName: manifest
    summary: Manifest for the client-side component.
    remarks: ''
    isPreview: false
    isDeprecated: false
    syntax:
      content: 'readonly manifest: IClientSideComponentManifest;'
      return:
        type: '<xref uid="@microsoft/sp-module-interfaces!IClientSideComponentManifest:interface" />'
  - name: msGraphClientFactory
    uid: '@microsoft/sp-component-base!BaseComponentContext#msGraphClientFactory:member'
    package: '@microsoft/sp-component-base!'
    fullName: msGraphClientFactory
    summary: The instance of MSGraphClientFactory created for this instance of component
    remarks: ''
    isPreview: false
    isDeprecated: false
    syntax:
      content: 'get msGraphClientFactory(): MSGraphClientFactory;'
      return:
        type: '<xref uid="@microsoft/sp-http-msgraph!MSGraphClientFactory:class" />'
  - name: pageContext
    uid: '@microsoft/sp-component-base!BaseComponentContext#pageContext:member'
    package: '@microsoft/sp-component-base!'
    fullName: pageContext
    summary: >-
      The page context provides standard definitions for common SharePoint objects that need to be shared between the
      client-side application, web parts, and other components.
    remarks: ''
    isPreview: false
    isDeprecated: false
    syntax:
      content: 'get pageContext(): PageContext;'
      return:
        type: '<xref uid="@microsoft/sp-page-context!PageContext:class" />'
  - name: serviceScope
    uid: '@microsoft/sp-component-base!BaseComponentContext#serviceScope:member'
    package: '@microsoft/sp-component-base!'
    fullName: serviceScope
    summary: 'The associated [ServiceScope](xref:@microsoft/sp-core-library!ServiceScope:class) for this component.'
    remarks: A child service scope is created for each client-side component.
    isPreview: false
    isDeprecated: false
    syntax:
      content: 'get serviceScope(): ServiceScope;'
      return:
        type: '<xref uid="@microsoft/sp-core-library!ServiceScope:class" />'
  - name: spHttpClient
    uid: '@microsoft/sp-component-base!BaseComponentContext#spHttpClient:member'
    package: '@microsoft/sp-component-base!'
    fullName: spHttpClient
    summary: The instance of SpHttpClient created for this instance of component
    remarks: ''
    isPreview: false
    isDeprecated: false
    syntax:
      content: 'get spHttpClient(): SPHttpClient;'
      return:
        type: '<xref uid="@microsoft/sp-http-base!SPHttpClient:class" />'
methods:
  - name: dispose()
    uid: '@microsoft/sp-component-base!BaseComponentContext#dispose:member(1)'
    package: '@microsoft/sp-component-base!'
    fullName: dispose()
    summary: Disposes the base component context.
    remarks: ''
    isPreview: false
    isDeprecated: false
    syntax:
      content: 'dispose(): void;'
      return:
        type: void
        description: ''
