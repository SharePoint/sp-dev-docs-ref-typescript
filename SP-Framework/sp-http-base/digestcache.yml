### YamlMime:TSType
name: DigestCache
uid: '@microsoft/sp-http-base!DigestCache:class'
package: '@microsoft/sp-http-base!'
fullName: DigestCache
summary: >-
  IDigestCache is an internal service used by SPHttpClient to maintain a cache of request digests for each SPWeb URL. A
  request digest is a security token that the SharePoint server requires for for any REST write operation, specified via
  the "X-RequestDigest" HTTP header. It is obtained by calling the "/\_api/contextinfo" REST endpoint, and expires after
  a server configurable amount of time.


  For more information, see the MSDN article ["Complete basic operations using SharePoint 2013 REST
  endpoints"](https://msdn.microsoft.com/en-us/library/office/jj164022.aspx)
remarks: ''
isPreview: false
isDeprecated: false
type: class
constructors:
  - name: (constructor)(serviceScope)
    uid: '@microsoft/sp-http-base!DigestCache:constructor(1)'
    package: '@microsoft/sp-http-base!'
    fullName: (constructor)(serviceScope)
    summary: Constructs a new instance of the `DigestCache` class
    remarks: ''
    isPreview: false
    isDeprecated: false
    syntax:
      content: 'constructor(serviceScope: ServiceScope);'
      parameters:
        - id: serviceScope
          description: ''
          type: '<xref uid="@microsoft/sp-core-library!ServiceScope:class" />'
properties:
  - name: serviceKey
    uid: '@microsoft/sp-http-base!DigestCache.serviceKey:member'
    package: '@microsoft/sp-http-base!'
    fullName: serviceKey
    summary: The service key for IDigestCache.
    remarks: ''
    isPreview: false
    isDeprecated: false
    syntax:
      content: 'static readonly serviceKey: ServiceKey<IDigestCache>;'
      return:
        type: >-
          <xref uid="@microsoft/sp-core-library!ServiceKey:class" />&lt;<xref
          uid="@microsoft/sp-http-base!IDigestCache:interface" />&gt;
methods:
  - name: 'addDigestToCache(webUrl, digestValue, expirationTimestamp)'
    uid: '@microsoft/sp-http-base!DigestCache#addDigestToCache:member(1)'
    package: '@microsoft/sp-http-base!'
    fullName: 'addDigestToCache(webUrl, digestValue, expirationTimestamp)'
    summary: >-
      Inserts a specific request digest value into the cache. Normally this is unnecessary because the framework will
      automatically issue a REST request to fetch the digest when necessary; however, in advanced scenarios
      addDigestToCache() can be used to avoid the overhead of the REST call.
    remarks: ''
    isPreview: false
    isDeprecated: false
    syntax:
      content: 'addDigestToCache(webUrl: string, digestValue: string, expirationTimestamp: number): void;'
      parameters:
        - id: webUrl
          description: The URL of the SPWeb that the API call will be issued to. This may be a server-relative or absolute URL.
          type: string
        - id: digestValue
          description: >-
            The digest value, which is an opaque that must be generated by the SharePoint server. The syntax will look
            something like this: "0x0B85...2EAC,29 Jan 2016 01:23:45 -0000"
          type: string
        - id: expirationTimestamp
          description: >-
            A future point in time, as measured by performance.now(), after which the digest value will no longer be
            valid. NOTE: The expirationTime is a DOMHighResTimeStamp value whose units are fractional milliseconds; for
            example, to specify an expiration "5 seconds from right now", use performance.now()+5000.
          type: number
      return:
        type: void
        description: ''
  - name: clearAllDigests()
    uid: '@microsoft/sp-http-base!DigestCache#clearAllDigests:member(1)'
    package: '@microsoft/sp-http-base!'
    fullName: clearAllDigests()
    summary: Clears all values from the cache.
    remarks: ''
    isPreview: false
    isDeprecated: false
    syntax:
      content: 'clearAllDigests(): void;'
      return:
        type: void
        description: ''
  - name: clearDigest(webUrl)
    uid: '@microsoft/sp-http-base!DigestCache#clearDigest:member(1)'
    package: '@microsoft/sp-http-base!'
    fullName: clearDigest(webUrl)
    summary: >-
      Clears the cached digest for the specified SPWeb URL. This operation is useful e.g. if an error indicates that a
      digest was invalidated prior to its expiration time.
    remarks: ''
    isPreview: false
    isDeprecated: false
    syntax:
      content: 'clearDigest(webUrl: string): boolean;'
      parameters:
        - id: webUrl
          description: The URL of the SPWeb whose digest should be cleared. This may be a server-relative or absolute URL.
          type: string
      return:
        type: boolean
        description: Returns true if a cache entry was found and deleted; false otherwise.
  - name: fetchDigest(webUrl)
    uid: '@microsoft/sp-http-base!DigestCache#fetchDigest:member(1)'
    package: '@microsoft/sp-http-base!'
    fullName: fetchDigest(webUrl)
    summary: >-
      Returns a digest string for the specified SPWeb URL. If the cache already contains a usable value, the promise is
      fulfilled immediately. Otherwise, the promise will be pending and resolve after an HTTP request obtains the
      digest, which will be added to the cache.
    remarks: ''
    isPreview: false
    isDeprecated: false
    syntax:
      content: 'fetchDigest(webUrl: string): Promise<string>;'
      parameters:
        - id: webUrl
          description: The URL of the SPWeb that the API call will be issued to. This may be a server-relative or absolute URL.
          type: string
      return:
        type: Promise&lt;string&gt;
        description: A promise that is fulfilled with the digest value.
