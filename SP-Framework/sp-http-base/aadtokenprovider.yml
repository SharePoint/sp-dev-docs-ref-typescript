### YamlMime:TSType
name: AadTokenProvider
uid: '@microsoft/sp-http-base!AadTokenProvider:class'
package: '@microsoft/sp-http-base!'
fullName: AadTokenProvider
summary: >-
  This class allows a developer to obtain OAuth2 tokens from Azure AD.


  OAuth2 tokens are used to authenticate the user from the SharePoint page to other services such as PowerBI, Sway,
  Exchange, Yammer, etc.
remarks: >-
  This class is marked as `@sealed`. Subclasses should not extend it.


  The constructor for this class is marked as internal. Third-party code should not call the constructor directly or
  create subclasses that extend the `AadTokenProvider` class.
isPreview: false
isDeprecated: false
type: class
methods:
  - name: 'getToken(resourceEndpoint, options)'
    uid: '@microsoft/sp-http-base!AadTokenProvider#getToken:member(1)'
    package: '@microsoft/sp-http-base!'
    fullName: 'getToken(resourceEndpoint, options)'
    summary: |-
      Fetches the AAD OAuth2 token for a resource if the user that's currently logged in has access to that resource.

      The OAuth2 token should not be cached by the caller since it is already cached by the method itself.
    remarks: ''
    isPreview: false
    isDeprecated: false
    syntax:
      content: 'getToken(resourceEndpoint: string, options?: IGetTokenOptions): Promise<string>;'
      parameters:
        - id: resourceEndpoint
          description: the resource for which the token should be obtained
          type: string
        - id: options
          description: ''
          type: '<xref uid="@microsoft/sp-http-base!IGetTokenOptions:interface" />'
      return:
        type: Promise&lt;string&gt;
        description: A promise that will be fulfilled with the token or that will reject with an error message
  - name: 'getToken(resourceEndpoint, useCachedToken)'
    uid: '@microsoft/sp-http-base!AadTokenProvider#getToken:member(2)'
    package: '@microsoft/sp-http-base!'
    fullName: 'getToken(resourceEndpoint, useCachedToken)'
    summary: ''
    remarks: ''
    isPreview: false
    isDeprecated: false
    syntax:
      content: 'getToken(resourceEndpoint: string, useCachedToken?: boolean): Promise<string>;'
      parameters:
        - id: resourceEndpoint
          description: ''
          type: string
        - id: useCachedToken
          description: ''
          type: boolean
      return:
        type: Promise&lt;string&gt;
        description: ''
events:
  - name: onBeforeRedirectEvent
    uid: '@microsoft/sp-http-base!AadTokenProvider#onBeforeRedirectEvent:member'
    package: '@microsoft/sp-http-base!'
    fullName: onBeforeRedirectEvent
    summary: Notifies the developer before a full page redirect occurs.
    remarks: ''
    isPreview: false
    isDeprecated: false
    syntax:
      content: 'readonly onBeforeRedirectEvent: SPEvent<BeforeRedirectEventArgs>;'
      return:
        type: >-
          <xref uid="@microsoft/sp-core-library!SPEvent:class" />&lt;<xref
          uid="@microsoft/sp-http-base!BeforeRedirectEventArgs:class" />&gt;
  - name: popupEvent
    uid: '@microsoft/sp-http-base!AadTokenProvider#popupEvent:member'
    package: '@microsoft/sp-http-base!'
    fullName: popupEvent
    summary: Notifies the developer if the logic flow would like to request a popup flow for user interaction.
    remarks: ''
    isPreview: false
    isDeprecated: false
    syntax:
      content: 'readonly popupEvent: SPEvent<PopupEventArgs>;'
      return:
        type: >-
          <xref uid="@microsoft/sp-core-library!SPEvent:class" />&lt;<xref
          uid="@microsoft/sp-http-base!PopupEventArgs:class" />&gt;
  - name: tokenAcquisitionEvent
    uid: '@microsoft/sp-http-base!AadTokenProvider#tokenAcquisitionEvent:member'
    package: '@microsoft/sp-http-base!'
    fullName: tokenAcquisitionEvent
    summary: Notifies the developer when Token Acquisition requires user action.
    remarks: ''
    isPreview: false
    isDeprecated: false
    syntax:
      content: 'get tokenAcquisitionEvent(): SPEvent<TokenAcquisitionEventArgs>;'
      return:
        type: >-
          <xref uid="@microsoft/sp-core-library!SPEvent:class" />&lt;<xref
          uid="@microsoft/sp-http-base!TokenAcquisitionEventArgs:class" />&gt;
