### YamlMime:TSType
name: SPComponentLoader
uid: '@microsoft/sp-loader!SPComponentLoader:class'
package: '@microsoft/sp-loader!'
fullName: SPComponentLoader
summary: Component loader. Needs to be initialized with an implemented `ISPComponentLoader`<!-- -->.
remarks: ''
example: []
isPreview: false
isDeprecated: false
type: class
methods:
  - name: getManifests()
    uid: '@microsoft/sp-loader!SPComponentLoader.getManifests:member(1)'
    package: '@microsoft/sp-loader!'
    fullName: getManifests()
    summary: Returns static copies of all the manifests.
    remarks: ''
    example: []
    isPreview: false
    isDeprecated: true
    customDeprecatedMessage: this method will be removed in a future release.
    syntax:
      content: 'static getManifests(): IClientSideComponentManifest[];'
      return:
        type: '<xref uid="@microsoft/sp-module-interfaces!IClientSideComponentManifest:interface" />[]'
        description: ''
  - name: loadComponent(manifest)
    uid: '@microsoft/sp-loader!SPComponentLoader.loadComponent:member(1)'
    package: '@microsoft/sp-loader!'
    fullName: loadComponent(manifest)
    summary: Loads a component from a manifest.
    remarks: ''
    example: []
    isPreview: false
    isDeprecated: false
    syntax:
      content: 'static loadComponent<TComponent>(manifest: IClientSideComponentManifest): Promise<TComponent>;'
      parameters:
        - id: manifest
          description: Manifest of the module to load.
          type: '<xref uid="@microsoft/sp-module-interfaces!IClientSideComponentManifest:interface" />'
      return:
        type: Promise&lt;TComponent&gt;
        description: A promise containing the loaded module.
  - name: 'loadComponentById(id, version)'
    uid: '@microsoft/sp-loader!SPComponentLoader.loadComponentById:member(1)'
    package: '@microsoft/sp-loader!'
    fullName: 'loadComponentById(id, version)'
    summary: 'Resolve a component id and version, and load it.'
    remarks: ''
    example: []
    isPreview: false
    isDeprecated: false
    syntax:
      content: 'static loadComponentById<TComponent>(id: string, version?: string): Promise<TComponent>;'
      parameters:
        - id: id
          description: The id of the component to load.
          type: string
        - id: version
          description: >-
            The version of the component to load. If version is not defined, the method will load any version of the
            component.
          type: string
      return:
        type: Promise&lt;TComponent&gt;
        description: A promise containing the loaded module.
  - name: loadCss(url)
    uid: '@microsoft/sp-loader!SPComponentLoader.loadCss:member(1)'
    package: '@microsoft/sp-loader!'
    fullName: loadCss(url)
    summary: Inserts a `<link ... />` tag for a stylesheet.
    remarks: ''
    example: []
    isPreview: false
    isDeprecated: false
    syntax:
      content: 'static loadCss(url: string): void;'
      parameters:
        - id: url
          description: The CSS file URL.
          type: string
      return:
        type: void
        description: ''
  - name: 'loadScript(url, options)'
    uid: '@microsoft/sp-loader!SPComponentLoader.loadScript:member(1)'
    package: '@microsoft/sp-loader!'
    fullName: 'loadScript(url, options)'
    summary: 'Given a URL, load a script.'
    remarks: >-
      If a script with a global variable is being loaded, the global variable already exists, and the script fails to
      load (because of a syntax error, for example), the original global variable may be returned and an error may not
      be propagated.
    example: []
    isPreview: false
    isDeprecated: false
    syntax:
      content: 'static loadScript<TModule>(url: string, options?: ILoadScriptOptions): Promise<TModule>;'
      parameters:
        - id: url
          description: The script URL.
          type: string
        - id: options
          description: >-
            globalExportsName: If the script isn't an AMD module and loads a global member on the page, specify the
            global member's name.
          type: '<xref uid="@microsoft/sp-loader!ILoadScriptOptions:interface" />'
      return:
        type: Promise&lt;TModule&gt;
        description: A promise containing the loaded module.
