### YamlMime:TSType
name: IPropertyPaneCustomFieldProps
uid: '@microsoft/sp-property-pane!IPropertyPaneCustomFieldProps:interface'
package: '@microsoft/sp-property-pane!'
fullName: IPropertyPaneCustomFieldProps
summary: PropertyPane CustomPropertyField props.
remarks: ''
isPreview: false
isDeprecated: false
type: interface
properties:
  - name: context
    uid: '@microsoft/sp-property-pane!IPropertyPaneCustomFieldProps#context:member'
    package: '@microsoft/sp-property-pane!'
    fullName: context
    summary: >-
      Instance specific context. This context is passed back to the web part in the onRender and onDispose APIs. The web
      part can use this context to manage state information.
    remarks: ''
    isPreview: false
    isDeprecated: false
    syntax:
      content: 'context?: any;'
      return:
        type: any
  - name: key
    uid: '@microsoft/sp-property-pane!IPropertyPaneCustomFieldProps#key:member'
    package: '@microsoft/sp-property-pane!'
    fullName: key
    summary: >-
      An UNIQUE key indicates the identity of this control.


      The PropertyPane uses ReactJS to render its components. ReactJS uses keys to identify a component and if it should
      be re-rendered or not. This is a performance feature in ReactJS. Please read the following link to understand how
      to pick the value of the key.


      For more information, see the [React
      documentation](https://facebook.github.io/react/docs/lists-and-keys.html#keys)<!-- -->.
    remarks: ''
    isPreview: false
    isDeprecated: false
    syntax:
      content: 'key: string;'
      return:
        type: string
  - name: onDispose
    uid: '@microsoft/sp-property-pane!IPropertyPaneCustomFieldProps#onDispose:member'
    package: '@microsoft/sp-property-pane!'
    fullName: onDispose
    summary: This API is called when the component is unmounted from the host element.
    remarks: ''
    isPreview: false
    isDeprecated: false
    syntax:
      content: 'onDispose?: (domElement: HTMLElement, context?: any) => void;'
      return:
        type: '(domElement: HTMLElement, context?: any) =&gt; void'
  - name: onRender
    uid: '@microsoft/sp-property-pane!IPropertyPaneCustomFieldProps#onRender:member'
    package: '@microsoft/sp-property-pane!'
    fullName: onRender
    summary: This API will be called once the custom field is mounted on the host element.
    remarks: ''
    isPreview: false
    isDeprecated: false
    syntax:
      content: >-
        onRender: (domElement: HTMLElement, context?: any, changeCallback?: (targetProperty?: string, newValue?: any,
        isValidEntry?: boolean) => void) => void;
      return:
        type: >-
          (domElement: HTMLElement, context?: any, changeCallback?: (targetProperty?: string, newValue?: any,
          isValidEntry?: boolean) =&gt; void) =&gt; void
