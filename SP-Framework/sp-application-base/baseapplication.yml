### YamlMime:TSType
name: BaseApplication
uid: '@microsoft/sp-application-base!BaseApplication:class'
package: '@microsoft/sp-application-base!'
fullName: BaseApplication
summary: >-
  This is the system base class for client-side applications. It manages the overall life cycle of your application, and
  is the first entry point for your code to start executing when the page loads. The two main events are onLoad() which
  occurs first, and onRender() which occurs after the application manager has initialized the environment and completed
  rendering the page chrome.
remarks: ''
example: []
isPreview: true
isDeprecated: false
type: class
constructors:
  - name: (constructor)()
    uid: '@microsoft/sp-application-base!BaseApplication:constructor(1)'
    package: '@microsoft/sp-application-base!'
    fullName: (constructor)()
    summary: Constructs a new instance of the `BaseApplication` class
    remarks: ''
    example: []
    isPreview: true
    isDeprecated: false
    syntax:
      content: constructor();
properties:
  - name: alias
    uid: '@microsoft/sp-application-base!BaseApplication#alias:member'
    package: '@microsoft/sp-application-base!'
    fullName: alias
    summary: Overrides the IClientSideComponentManifest.alias value provided in the manifest.
    remarks: ''
    example: []
    isPreview: true
    isDeprecated: false
    syntax:
      content: 'readonly alias: string;'
      return:
        type: string
  - name: context
    uid: '@microsoft/sp-application-base!BaseApplication#context:member'
    package: '@microsoft/sp-application-base!'
    fullName: context
    summary: Use the context object to access common services and state associated with the component.
    remarks: >-
      Child classes are expected to override this field by redeclaring it with a specialized type. It is meant to be a
      read-only property; the type cannot be declared as read-only in the base class (because it is initialized outside
      the constructor), but child classes should redeclare it as readonly.
    example: []
    isPreview: true
    isDeprecated: false
    syntax:
      content: 'protected readonly context: BaseApplicationContext;'
      return:
        type: '<xref uid="@microsoft/sp-application-base!BaseApplicationContext:class" />'
  - name: domElement
    uid: '@microsoft/sp-application-base!BaseApplication#domElement:member'
    package: '@microsoft/sp-application-base!'
    fullName: domElement
    summary: >-
      Returns the DOM element where the application is expected to render its content. The domElement will be undefined
      until the onRender() event occurs.
    remarks: >-
      IMPORTANT: The application should not access DOM elements outside of this subtree, as they are system-defined and
      may change over time.


      Throws an error if the domElement is undefined.
    example: []
    isPreview: true
    isDeprecated: false
    syntax:
      content: |-
        protected get domElement(): HTMLDivElement;

        protected set domElement(value: HTMLDivElement);
      return:
        type: HTMLDivElement
extends: '<xref uid="@microsoft/sp-component-base!BaseComponent:class" />'
