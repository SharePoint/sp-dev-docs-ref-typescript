### YamlMime:TSType
name: BaseApplicationCustomizer
uid: '@microsoft/sp-application-base!BaseApplicationCustomizer:class'
package: '@microsoft/sp-application-base!'
fullName: BaseApplicationCustomizer
summary: >-
  This is the base class that third parties should extend when implementing a client-side extension that runs when an
  application is first starting.
remarks: >-
  In the component manifest, the "extensionType" should be set to "ApplicationCustomizer".


  Example usage scenarios for an application customizer might include: rendering custom UI elements inside a SharePoint
  content placeholder, tracking page load statistics, or automatically logging the user out after a certain time period.
isPreview: false
isDeprecated: false
type: class
properties:
  - name: _dynamicDataSourceId
    uid: '@microsoft/sp-application-base!BaseApplicationCustomizer#_dynamicDataSourceId:member'
    package: '@microsoft/sp-application-base!'
    fullName: _dynamicDataSourceId
    summary: >-
      Override BaseComponent.\_dynamicDataSourceId to exclude instance id. Application Customizer's instance id changes
      per session.
    remarks: ''
    isPreview: false
    isDeprecated: false
    syntax:
      content: 'get _dynamicDataSourceId(): string;'
      return:
        type: string
  - name: context
    uid: '@microsoft/sp-application-base!BaseApplicationCustomizer#context:member'
    package: '@microsoft/sp-application-base!'
    fullName: context
    summary: ''
    remarks: ''
    isPreview: false
    isDeprecated: false
    syntax:
      content: 'protected readonly context: ApplicationCustomizerContext;'
      return:
        type: '<xref uid="@microsoft/sp-application-base!ApplicationCustomizerContext:class" />'
methods:
  - name: dispose()
    uid: '@microsoft/sp-application-base!BaseApplicationCustomizer#dispose:member(1)'
    package: '@microsoft/sp-application-base!'
    fullName: dispose()
    summary: Disposes the component.
    remarks: >-
      Third-party code generally does not need to call this method; it's invoked automatically when the lifecycle ends
      for a web part or extension. To perform custom cleanup when your component is disposed, override the  method.
    isPreview: false
    isDeprecated: false
    syntax:
      content: 'dispose(): void;'
      return:
        type: void
        description: ''
  - name: onPlaceholdersChanged(placeholderProvider)
    uid: '@microsoft/sp-application-base!BaseApplicationCustomizer#onPlaceholdersChanged:member(1)'
    package: '@microsoft/sp-application-base!'
    fullName: onPlaceholdersChanged(placeholderProvider)
    summary: >-
      This event method is called when the placeholders of the host application change, come into existence, or
      disappear. virtual
    remarks: ''
    isPreview: false
    isDeprecated: false
    syntax:
      content: 'protected onPlaceholdersChanged(placeholderProvider: PlaceholderProvider): void;'
      parameters:
        - id: placeholderProvider
          description: ''
          type: '<xref uid="@microsoft/sp-application-base!PlaceholderProvider:class" />'
      return:
        type: void
        description: ''
extends: '<xref uid="@microsoft/sp-extension-base!BaseExtension:class" />&lt;TProperties&gt;'
