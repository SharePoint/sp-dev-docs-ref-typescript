### YamlMime:TSType
name: IPathModuleConfiguration
uid: '@microsoft/sp-module-interfaces!IPathModuleConfiguration:interface'
package: '@microsoft/sp-module-interfaces!'
fullName: IPathModuleConfiguration
summary: >-
  This is the interface for a script module with the "path" type. Modules of this type must be provided by the component
  developer.
remarks: ''
isPreview: true
isDeprecated: false
type: interface
properties:
  - name: globalDependencies
    uid: '@microsoft/sp-module-interfaces!IPathModuleConfiguration#globalDependencies:member'
    package: '@microsoft/sp-module-interfaces!'
    fullName: globalDependencies
    summary: >-
      For non-AMD/module-pattern scripts that have dependencies (for example, jQuery plugins), the module loader will
      ensure that those dependencies are already loaded.
    remarks: >-
      Entries in the array specified in this field must refer to other non-AMD modules in this component. This field is
      not required to have a value for non-AMD modules. If any values are specified that do not refer to other modules
      in the same component manifest that this module is specified, the module loader will throw an exception and the
      component will fail to load.


      Supported values: Names of other non-AMD-pattern modules in this loader configuration, as specified by the key
      `IClientSideComponentLoaderConfiguration.scriptResources[]`


      Example: `["jquery"]`
    isPreview: true
    isDeprecated: false
    syntax:
      content: 'globalDependencies?: string[];'
      return:
        type: 'string[]'
  - name: globalName
    uid: '@microsoft/sp-module-interfaces!IPathModuleConfiguration#globalName:member'
    package: '@microsoft/sp-module-interfaces!'
    fullName: globalName
    summary: >-
      If this property is specified, this module is considered non-AMD and the module loader will not expect "define" or
      "require" to be called.
    remarks: >-
      In order to load scripts that don't follow the AMD/module-pattern where "define" or "require" is called and
      dependencies are explicitly listed and exports are explicitly returned, the module loader needs to know which
      global variable must be examined. If this property is specified, this module is considered non-AMD and the module
      loader will not expect "define" or "require" to be called. Instead, it will wait for the script to finish loading
      and examine the global variable specified in this field.


      Supported values: Variable names that are expected to be populated after this module is loaded. For example, if
      this module is describing jQuery, this value should probably be "$". If an empty string is specified, the module
      loader will throw an exception and the component will fail to load.


      Example: `"$"`
    isPreview: true
    isDeprecated: false
    syntax:
      content: 'globalName?: string;'
      return:
        type: string
  - name: path
    uid: '@microsoft/sp-module-interfaces!IPathModuleConfiguration#path:member'
    package: '@microsoft/sp-module-interfaces!'
    fullName: path
    summary: >-
      A path to this module's javascript resource either as a fully-qualified URL or as a path under the paths provided
      in the `internalModuleBaseUrls` field.
    remarks: >-
      For example, if this field's value is `"master_2015-04-20/my-application.bundle_1928f8a0.js"` and the
      `"internalModuleBaseUrls"` field's value is `[ "https://contoso.akamaihd.net/files/",
      "https://contoso.msecnd.net/files/" ]`<!-- -->, the loader will first attempt to load this script resource from
      the URL `"https://contoso.akamaihd.net/files/master_2015-04-20/my-application.bundle_1928f8a0.js"`<!-- -->. If
      loading from that URL fails, the loader will then attempt to load this script resource from
      `"https://contoso.msecnd.net/files/master_2015-04-20/my-application.bundle_1928f8a0.js"`<!-- -->. If that URL
      fails to load, the component will fail to load and an error will be returned.


      Supported values: The path to the module either as a fully-qualified URL or as a path under the paths provided in
      the "internalModuleBaseUrls" field.


      Example: `"master_2015-04-20/my-application.bundle_1928f8a0.js"`
    isPreview: true
    isDeprecated: false
    syntax:
      content: 'path: string | IIntegrityPath;'
      return:
        type: 'string | <xref uid="@microsoft/sp-module-interfaces!IIntegrityPath:interface" />'
  - name: type
    uid: '@microsoft/sp-module-interfaces!IPathModuleConfiguration#type:member'
    package: '@microsoft/sp-module-interfaces!'
    fullName: type
    summary: ''
    remarks: ''
    isPreview: true
    isDeprecated: false
    syntax:
      content: 'type: ''path'';'
      return:
        type: '''path'''
extends: '<xref uid="@microsoft/sp-module-interfaces!IModuleConfigurationBase:interface" />'
